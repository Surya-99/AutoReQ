{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useDropzone } from 'react-dropzone';\n// import axios from 'axios';\n// import Header from './Header';\n// import './LandingPage.css';\n\n// const LandingPage = ({ userName }) => {\n//     const [file, setFile] = useState(null);\n//     const [summary, setSummary] = useState('');\n//     const [notes, setNotes] = useState('');\n//     const [pptContent, setPptContent] = useState('');\n//     const [loading, setLoading] = useState(false);\n//     const [submitStatus, setSubmitStatus] = useState('');\n\n//     const onDrop = (acceptedFiles) => {\n//         if (acceptedFiles.length > 0 && (acceptedFiles[0].type === 'text/plain' || acceptedFiles[0].type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document')) {\n//             setFile(acceptedFiles[0]);\n//             setSubmitStatus('');\n//         } else {\n//             alert('Please upload a .txt or .docx file.');\n//         }\n//     };\n\n//     const { getRootProps, getInputProps } = useDropzone({ onDrop, accept: { 'text/plain': ['.txt'], 'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx'] } });\n\n//     const handleSubmit = async () => {\n//         if (!file) return alert('Please upload a file first.');\n//         setLoading(true);\n//         setSubmitStatus('Submitting...');\n//         const formData = new FormData();\n//         formData.append('file', file);\n//         try {\n//             const response = await axios.post('/api/submit', formData, {\n//                 headers: { 'Content-Type': 'multipart/form-data' },\n//             });\n//             setSubmitStatus('File submitted successfully!');\n//             console.log('File submitted:', response.data);\n//         } catch (error) {\n//             setSubmitStatus('Failed to submit file. Please try again.');\n//             console.error('Submit error:', error);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const fetchContent = async (endpoint) => {\n//         if (!file) return alert('Please upload a file first.');\n//         setLoading(true);\n//         const formData = new FormData();\n//         formData.append('file', file);\n//         try {\n//             const response = await axios.post(`/api/${endpoint}`, formData, {\n//                 headers: { 'Content-Type': 'multipart/form-data' },\n//             });\n//             if (endpoint === 'summary') setSummary(response.data);\n//             else if (endpoint === 'notes') setNotes(response.data);\n//             else if (endpoint === 'ppt') setPptContent(response.data);\n//         } catch (error) {\n//             console.error('Error fetching content:', error);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const downloadPPT = () => {\n//         if (pptContent) {\n//             const blob = new Blob([pptContent], { type: 'application/vnd.openxmlformats-officedocument.presentationml.presentation' });\n//             const url = window.URL.createObjectURL(blob);\n//             const link = document.createElement('a');\n//             link.href = url;\n//             link.download = 'presentation.pptx';\n//             document.body.appendChild(link);\n//             link.click();\n//             document.body.removeChild(link);\n//             window.URL.revokeObjectURL(url);\n//         }\n//     };\n\n//     return (\n//         <div className=\"landing-page\">\n//             <Header userName={userName} />\n//             <h2>AutoReQ</h2>\n//             <div className=\"wrapper-for-drop\">\n//                 <div {...getRootProps()} className=\"dropzone\">\n//                     <input {...getInputProps()} />\n//                     <p>Drag and drop a .txt or .docx file here</p>\n//                     {file && <p>{file.name}</p>}\n//                 </div>\n//             </div>\n//             <button onClick={handleSubmit} className=\"submit-button\">\n//                 Submit\n//             </button>\n//             {submitStatus && <p className=\"submit-status\">{submitStatus}</p>}\n//             <div className=\"button-group\">\n//                 <button onClick={() => fetchContent('summary')} disabled={loading}>Generate Summary</button>\n//                 <button onClick={() => fetchContent('notes')} disabled={loading}>Generate Notes</button>\n//                 <button onClick={() => fetchContent('ppt')} disabled={loading}>Generate PPT</button>\n//             </div>\n//             {(summary || notes || pptContent) && (\n//                 <div className=\"content-box\">\n//                     {summary && <p>{summary}</p>}\n//                     {notes && <p>{notes}</p>}\n//                     {pptContent && (\n//                         <>\n//                             <p>Preview: {pptContent}</p>\n//                             <button onClick={downloadPPT}>Download PPT</button>\n//                         </>\n//                     )}\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default LandingPage;","map":{"version":3,"names":[],"sources":["C:/Users/smareedu/OneDrive - Hitachi Vantara/Desktop/teams_transcript_ppt_simple/frontend/src/components/LandingPage.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useDropzone } from 'react-dropzone';\r\n// import axios from 'axios';\r\n// import Header from './Header';\r\n// import './LandingPage.css';\r\n\r\n// const LandingPage = ({ userName }) => {\r\n//     const [file, setFile] = useState(null);\r\n//     const [summary, setSummary] = useState('');\r\n//     const [notes, setNotes] = useState('');\r\n//     const [pptContent, setPptContent] = useState('');\r\n//     const [loading, setLoading] = useState(false);\r\n//     const [submitStatus, setSubmitStatus] = useState('');\r\n\r\n//     const onDrop = (acceptedFiles) => {\r\n//         if (acceptedFiles.length > 0 && (acceptedFiles[0].type === 'text/plain' || acceptedFiles[0].type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document')) {\r\n//             setFile(acceptedFiles[0]);\r\n//             setSubmitStatus('');\r\n//         } else {\r\n//             alert('Please upload a .txt or .docx file.');\r\n//         }\r\n//     };\r\n\r\n//     const { getRootProps, getInputProps } = useDropzone({ onDrop, accept: { 'text/plain': ['.txt'], 'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx'] } });\r\n\r\n//     const handleSubmit = async () => {\r\n//         if (!file) return alert('Please upload a file first.');\r\n//         setLoading(true);\r\n//         setSubmitStatus('Submitting...');\r\n//         const formData = new FormData();\r\n//         formData.append('file', file);\r\n//         try {\r\n//             const response = await axios.post('/api/submit', formData, {\r\n//                 headers: { 'Content-Type': 'multipart/form-data' },\r\n//             });\r\n//             setSubmitStatus('File submitted successfully!');\r\n//             console.log('File submitted:', response.data);\r\n//         } catch (error) {\r\n//             setSubmitStatus('Failed to submit file. Please try again.');\r\n//             console.error('Submit error:', error);\r\n//         } finally {\r\n//             setLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     const fetchContent = async (endpoint) => {\r\n//         if (!file) return alert('Please upload a file first.');\r\n//         setLoading(true);\r\n//         const formData = new FormData();\r\n//         formData.append('file', file);\r\n//         try {\r\n//             const response = await axios.post(`/api/${endpoint}`, formData, {\r\n//                 headers: { 'Content-Type': 'multipart/form-data' },\r\n//             });\r\n//             if (endpoint === 'summary') setSummary(response.data);\r\n//             else if (endpoint === 'notes') setNotes(response.data);\r\n//             else if (endpoint === 'ppt') setPptContent(response.data);\r\n//         } catch (error) {\r\n//             console.error('Error fetching content:', error);\r\n//         } finally {\r\n//             setLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     const downloadPPT = () => {\r\n//         if (pptContent) {\r\n//             const blob = new Blob([pptContent], { type: 'application/vnd.openxmlformats-officedocument.presentationml.presentation' });\r\n//             const url = window.URL.createObjectURL(blob);\r\n//             const link = document.createElement('a');\r\n//             link.href = url;\r\n//             link.download = 'presentation.pptx';\r\n//             document.body.appendChild(link);\r\n//             link.click();\r\n//             document.body.removeChild(link);\r\n//             window.URL.revokeObjectURL(url);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"landing-page\">\r\n//             <Header userName={userName} />\r\n//             <h2>AutoReQ</h2>\r\n//             <div className=\"wrapper-for-drop\">\r\n//                 <div {...getRootProps()} className=\"dropzone\">\r\n//                     <input {...getInputProps()} />\r\n//                     <p>Drag and drop a .txt or .docx file here</p>\r\n//                     {file && <p>{file.name}</p>}\r\n//                 </div>\r\n//             </div>\r\n//             <button onClick={handleSubmit} className=\"submit-button\">\r\n//                 Submit\r\n//             </button>\r\n//             {submitStatus && <p className=\"submit-status\">{submitStatus}</p>}\r\n//             <div className=\"button-group\">\r\n//                 <button onClick={() => fetchContent('summary')} disabled={loading}>Generate Summary</button>\r\n//                 <button onClick={() => fetchContent('notes')} disabled={loading}>Generate Notes</button>\r\n//                 <button onClick={() => fetchContent('ppt')} disabled={loading}>Generate PPT</button>\r\n//             </div>\r\n//             {(summary || notes || pptContent) && (\r\n//                 <div className=\"content-box\">\r\n//                     {summary && <p>{summary}</p>}\r\n//                     {notes && <p>{notes}</p>}\r\n//                     {pptContent && (\r\n//                         <>\r\n//                             <p>Preview: {pptContent}</p>\r\n//                             <button onClick={downloadPPT}>Download PPT</button>\r\n//                         </>\r\n//                     )}\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default LandingPage;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}