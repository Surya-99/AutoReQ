{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smareedu\\\\OneDrive - Hitachi Vantara\\\\Desktop\\\\teams_transcript_ppt_simple\\\\frontend\\\\src\\\\components\\\\LandingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\nimport Header from './Header';\nimport './LandingPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LandingPage = ({\n  userName\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [summary, setSummary] = useState('');\n  const [notes, setNotes] = useState('');\n  const [pptFileUrl, setPptFileUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState('');\n  const onDrop = acceptedFiles => {\n    if (acceptedFiles.length > 0 && (acceptedFiles[0].type === 'text/plain' || acceptedFiles[0].type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document')) {\n      setFile(acceptedFiles[0]);\n      setSubmitStatus('');\n      setSummary('');\n      setNotes('');\n      setPptFileUrl('');\n    } else {\n      alert('Please upload a .txt or .docx file.');\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'text/plain': ['.txt'],\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx']\n    }\n  });\n  const handleSubmit = async () => {\n    if (!file) return alert('Please upload a file first.');\n    setLoading(true);\n    setSubmitStatus('Submitting...');\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/api/upload/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setSubmitStatus('File uploaded successfully!');\n      console.log('Upload response:', response.data);\n    } catch (error) {\n      setSubmitStatus('Failed to upload file. Please try again.');\n      console.error('Upload error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchContent = async endpoint => {\n    if (!file) return alert('Please upload a file first.');\n    setLoading(true);\n    try {\n      let response;\n      const fileName = encodeURIComponent(file.name);\n      if (endpoint === 'ppt') {\n        response = await axios.get(`http://127.0.0.1:8000/api/generate_${endpoint}/?file=${fileName}`, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('PPT API response:', response.data);\n        if (response.data.message === 'PPT generated successfully.' && response.data.ppt_file) {\n          const pptUrl = `http://127.0.0.1:8000/api/${response.data.ppt_file}`;\n          const fileResponse = await axios.get(pptUrl, {\n            responseType: 'blob',\n            headers: {\n              'Accept': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n            }\n          });\n          console.log('PPT file response status:', fileResponse.status);\n          const url = window.URL.createObjectURL(new Blob([fileResponse.data]));\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = 'presentation.pptx';\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          window.URL.revokeObjectURL(url);\n          setPptFileUrl(pptUrl);\n        } else {\n          throw new Error('PPT generation failed or invalid response');\n        }\n      } else {\n        response = await axios.get(`http://127.0.0.1:8000/api/generate_${endpoint}/?file=${fileName}`, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (endpoint === 'summary') setSummary(response.data.summary || '');else if (endpoint === 'notes') setNotes(response.data.notes || '');\n      }\n    } catch (error) {\n      console.error(`Error fetching ${endpoint}:`, error.response ? error.response.data : error.message);\n      alert(`Failed to fetch ${endpoint}. Check console for details.`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderNotes = () => {\n    if (!notes) return null;\n    const lines = notes.split('\\n').map(line => line.trim()).filter(line => line);\n    const structuredNotes = [];\n    let currentHeading = null;\n    let currentPoints = [];\n    lines.forEach(line => {\n      if (line.startsWith('**') && line.endsWith('**')) {\n        if (currentHeading && currentPoints.length > 0) {\n          structuredNotes.push({\n            heading: currentHeading,\n            points: currentPoints\n          });\n          currentPoints = [];\n        }\n        currentHeading = line.replace(/\\*\\*/g, '');\n      } else if (line.startsWith('*')) {\n        currentPoints.push(line.replace('*', '').trim());\n      }\n    });\n    if (currentHeading && currentPoints.length > 0) {\n      structuredNotes.push({\n        heading: currentHeading,\n        points: currentPoints\n      });\n    }\n    return structuredNotes.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"black\"\n        },\n        children: section.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: section.points.map((point, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: point\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"landing-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      userName: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title\",\n      children: \"AutoReQ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-for-drop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        className: \"dropzone\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"dropzone-text\",\n          children: \"Drag and drop a .txt or .docx file here, or click to select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), file && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"file-name\",\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"submit-button\",\n      disabled: loading,\n      children: loading ? 'Submitting...' : 'Submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), submitStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"submit-status\",\n      children: submitStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchContent('summary'),\n        className: \"action-button\",\n        disabled: loading,\n        children: \"Generate Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchContent('notes'),\n        className: \"action-button\",\n        disabled: loading,\n        children: \"Generate Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchContent('ppt'),\n        className: \"action-button\",\n        disabled: loading,\n        children: \"Generate PPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), (summary || notes || pptFileUrl) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-box\",\n      children: [summary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 82\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }, this), notes && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 64\n        }, this), renderNotes()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 31\n      }, this), pptFileUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"PPT Generated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Download completed. Check your downloads folder.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n_s(LandingPage, \"GbwrfK4FlLLz5veDdgJx8AxWm/8=\", false, function () {\n  return [useDropzone];\n});\n_c = LandingPage;\nexport default LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["React","useState","useDropzone","axios","Header","jsxDEV","_jsxDEV","LandingPage","userName","_s","file","setFile","summary","setSummary","notes","setNotes","pptFileUrl","setPptFileUrl","loading","setLoading","submitStatus","setSubmitStatus","onDrop","acceptedFiles","length","type","alert","getRootProps","getInputProps","accept","handleSubmit","formData","FormData","append","response","post","headers","console","log","data","error","fetchContent","endpoint","fileName","encodeURIComponent","name","get","message","ppt_file","pptUrl","fileResponse","responseType","status","url","window","URL","createObjectURL","Blob","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","Error","renderNotes","lines","split","map","line","trim","filter","structuredNotes","currentHeading","currentPoints","forEach","startsWith","endsWith","push","heading","points","replace","section","index","className","children","style","color","_jsxFileName","lineNumber","columnNumber","point","idx","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/smareedu/OneDrive - Hitachi Vantara/Desktop/teams_transcript_ppt_simple/frontend/src/components/LandingPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport Header from './Header';\r\nimport './LandingPage.css';\r\n\r\nconst LandingPage = ({ userName }) => {\r\n    const [file, setFile] = useState(null);\r\n    const [summary, setSummary] = useState('');\r\n    const [notes, setNotes] = useState('');\r\n    const [pptFileUrl, setPptFileUrl] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [submitStatus, setSubmitStatus] = useState('');\r\n\r\n    const onDrop = (acceptedFiles) => {\r\n        if (acceptedFiles.length > 0 && (acceptedFiles[0].type === 'text/plain' || acceptedFiles[0].type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document')) {\r\n            setFile(acceptedFiles[0]);\r\n            setSubmitStatus('');\r\n            setSummary('');\r\n            setNotes('');\r\n            setPptFileUrl('');\r\n        } else {\r\n            alert('Please upload a .txt or .docx file.');\r\n        }\r\n    };\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({ onDrop, accept: { 'text/plain': ['.txt'], 'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx'] } });\r\n\r\n    const handleSubmit = async () => {\r\n        if (!file) return alert('Please upload a file first.');\r\n        setLoading(true);\r\n        setSubmitStatus('Submitting...');\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        try {\r\n            const response = await axios.post('http://127.0.0.1:8000/api/upload/', formData, {\r\n                headers: { 'Content-Type': 'multipart/form-data' },\r\n            });\r\n            setSubmitStatus('File uploaded successfully!');\r\n            console.log('Upload response:', response.data);\r\n        } catch (error) {\r\n            setSubmitStatus('Failed to upload file. Please try again.');\r\n            console.error('Upload error:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchContent = async (endpoint) => {\r\n        if (!file) return alert('Please upload a file first.');\r\n        setLoading(true);\r\n        try {\r\n            let response;\r\n            const fileName = encodeURIComponent(file.name);\r\n            if (endpoint === 'ppt') {\r\n                response = await axios.get(`http://127.0.0.1:8000/api/generate_${endpoint}/?file=${fileName}`, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                });\r\n                console.log('PPT API response:', response.data);\r\n                if (response.data.message === 'PPT generated successfully.' && response.data.ppt_file) {\r\n                    const pptUrl = `http://127.0.0.1:8000/api/${response.data.ppt_file}`;\r\n\r\n                    const fileResponse = await axios.get(pptUrl, {\r\n                        responseType: 'blob',\r\n                        headers: { 'Accept': 'application/vnd.openxmlformats-officedocument.presentationml.presentation' },\r\n                    });\r\n                    console.log('PPT file response status:', fileResponse.status);\r\n                    const url = window.URL.createObjectURL(new Blob([fileResponse.data]));\r\n                    const link = document.createElement('a');\r\n                    link.href = url;\r\n                    link.download = 'presentation.pptx';\r\n                    document.body.appendChild(link);\r\n                    link.click();\r\n                    document.body.removeChild(link);\r\n                    window.URL.revokeObjectURL(url);\r\n                    setPptFileUrl(pptUrl);\r\n                } else {\r\n                    throw new Error('PPT generation failed or invalid response');\r\n                }\r\n            } else {\r\n                response = await axios.get(`http://127.0.0.1:8000/api/generate_${endpoint}/?file=${fileName}`, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                });\r\n                if (endpoint === 'summary') setSummary(response.data.summary || '');\r\n                else if (endpoint === 'notes') setNotes(response.data.notes || '');\r\n            }\r\n        } catch (error) {\r\n            console.error(`Error fetching ${endpoint}:`, error.response ? error.response.data : error.message);\r\n            alert(`Failed to fetch ${endpoint}. Check console for details.`);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    \r\n    const renderNotes = () => {\r\n        if (!notes) return null;\r\n\r\n        const lines = notes.split('\\n').map(line => line.trim()).filter(line => line);\r\n        const structuredNotes = [];\r\n        let currentHeading = null;\r\n        let currentPoints = [];\r\n\r\n        lines.forEach(line => {\r\n            if (line.startsWith('**') && line.endsWith('**')) {\r\n                if (currentHeading && currentPoints.length > 0) {\r\n                    structuredNotes.push({ heading: currentHeading, points: currentPoints });\r\n                    currentPoints = [];\r\n                }\r\n                currentHeading = line.replace(/\\*\\*/g, '');\r\n            } else if (line.startsWith('*')) {\r\n                currentPoints.push(line.replace('*', '').trim());\r\n            }\r\n        });\r\n\r\n        if (currentHeading && currentPoints.length > 0) {\r\n            structuredNotes.push({ heading: currentHeading, points: currentPoints });\r\n        }\r\n\r\n        return structuredNotes.map((section, index) => (\r\n            <div key={index} className=\"content-section\">\r\n                <h3 style={{color: \"black\"}}>{section.heading}</h3>\r\n                <ul>\r\n                    {section.points.map((point, idx) => (\r\n                        <li key={idx}>{point}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <div className=\"landing-page\">\r\n            <Header userName={userName} />\r\n            <h2 className=\"page-title\">AutoReQ</h2>\r\n            <div className=\"wrapper-for-drop\">\r\n                <div {...getRootProps()} className=\"dropzone\">\r\n                    <input {...getInputProps()} />\r\n                    <p className=\"dropzone-text\">Drag and drop a .txt or .docx file here, or click to select</p>\r\n                    {file && <p className=\"file-name\">{file.name}</p>}\r\n                </div>\r\n            </div>\r\n            <button onClick={handleSubmit} className=\"submit-button\" disabled={loading}>\r\n                {loading ? 'Submitting...' : 'Submit'}\r\n            </button>\r\n            {submitStatus && <p className=\"submit-status\">{submitStatus}</p>}\r\n            <div className=\"button-group\">\r\n                <button onClick={() => fetchContent('summary')} className=\"action-button\" disabled={loading}>\r\n                    Generate Summary\r\n                </button>\r\n                <button onClick={() => fetchContent('notes')} className=\"action-button\" disabled={loading}>\r\n                    Generate Notes\r\n                </button>\r\n                <button onClick={() => fetchContent('ppt')} className=\"action-button\" disabled={loading}>\r\n                    Generate PPT\r\n                </button>\r\n            </div>\r\n            {(summary || notes || pptFileUrl) && (\r\n                <div className=\"content-box\">\r\n                    {summary && <div className=\"content-section\"><h3>Summary</h3><p>{summary}</p></div>}\r\n                    {notes && <div className=\"content-section\"><h3>Notes</h3>{renderNotes()}</div>}\r\n                    {pptFileUrl && (\r\n                        <div className=\"content-section\">\r\n                            <h3>PPT Generated</h3>\r\n                            <p>Download completed. Check your downloads folder.</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LandingPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}