{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smareedu\\\\OneDrive - Hitachi Vantara\\\\Desktop\\\\teams_transcript_ppt_simple\\\\frontend\\\\src\\\\components\\\\LandingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\nimport Header from './Header';\nimport './LandingPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LandingPage = ({\n  userName\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [summary, setSummary] = useState('');\n  const [notes, setNotes] = useState('');\n  const [pptFileUrl, setPptFileUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState('');\n  const onDrop = acceptedFiles => {\n    if (acceptedFiles.length > 0 && (acceptedFiles[0].type === 'text/plain' || acceptedFiles[0].type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document')) {\n      setFile(acceptedFiles[0]);\n      setSubmitStatus('');\n      setSummary('');\n      setNotes('');\n      setPptFileUrl('');\n    } else {\n      alert('Please upload a .txt or .docx file.');\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'text/plain': ['.txt'],\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx']\n    }\n  });\n\n  //     const handleSubmit = async () => {\n  //         if (!file) return alert('Please upload a file first.');\n  //         setLoading(true);\n  //         setSubmitStatus('Submitting...');\n  //         const formData = new FormData();\n  //         formData.append('file', file);\n  //         try {\n  //             const response = await axios.post('/api/submit', formData, {\n  //                 headers: { 'Content-Type': 'multipart/form-data' },\n  //             });\n  //             setSubmitStatus('File submitted successfully!');\n  //             console.log('File submitted:', response.data);\n  //         } catch (error) {\n  //             setSubmitStatus('Failed to submit file. Please try again.');\n  //             console.error('Submit error:', error);\n  //         } finally {\n  //             setLoading(false);\n  //         }\n  //     };\n\n  //     const fetchContent = async (endpoint) => {\n  //         if (!file) return alert('Please upload a file first.');\n  //         setLoading(true);\n  //         const formData = new FormData();\n  //         formData.append('file', file);\n  //         try {\n  //             const response = await axios.post(`/api/${endpoint}`, formData, {\n  //                 headers: { 'Content-Type': 'multipart/form-data' },\n  //             });\n  //             if (endpoint === 'summary') setSummary(response.data);\n  //             else if (endpoint === 'notes') setNotes(response.data);\n  //             else if (endpoint === 'ppt') setPptContent(response.data);\n  //         } catch (error) {\n  //             console.error('Error fetching content:', error);\n  //         } finally {\n  //             setLoading(false);\n  //         }\n  //     };\n\n  //     const downloadPPT = () => {\n  //         if (pptContent) {\n  //             const blob = new Blob([pptContent], { type: 'application/vnd.openxmlformats-officedocument.presentationml.presentation' });\n  //             const url = window.URL.createObjectURL(blob);\n  //             const link = document.createElement('a');\n  //             link.href = url;\n  //             link.download = 'presentation.pptx';\n  //             document.body.appendChild(link);\n  //             link.click();\n  //             document.body.removeChild(link);\n  //             window.URL.revokeObjectURL(url);\n  //         }\n  //     };\n\n  //     return (\n  //         <div className=\"landing-page\">\n  //             <Header userName={userName} />\n  //             <h2>AutoReQ</h2>\n  //             <div className=\"wrapper-for-drop\">\n  //                 <div {...getRootProps()} className=\"dropzone\">\n  //                     <input {...getInputProps()} />\n  //                     <p>Drag and drop a .txt or .docx file here</p>\n  //                     {file && <p>{file.name}</p>}\n  //                 </div>\n  //             </div>\n  //             <button onClick={handleSubmit} className=\"submit-button\">\n  //                 Submit\n  //             </button>\n  //             {submitStatus && <p className=\"submit-status\">{submitStatus}</p>}\n  //             <div className=\"button-group\">\n  //                 <button onClick={() => fetchContent('summary')} disabled={loading}>Generate Summary</button>\n  //                 <button onClick={() => fetchContent('notes')} disabled={loading}>Generate Notes</button>\n  //                 <button onClick={() => fetchContent('ppt')} disabled={loading}>Generate PPT</button>\n  //             </div>\n  //             {(summary || notes || pptContent) && (\n  //                 <div className=\"content-box\">\n  //                     {summary && <p>{summary}</p>}\n  //                     {notes && <p>{notes}</p>}\n  //                     {pptContent && (\n  //                         <>\n  //                             <p>Preview: {pptContent}</p>\n  //                             <button onClick={downloadPPT}>Download PPT</button>\n  //                         </>\n  //                     )}\n  //                 </div>\n  //             )}\n  //         </div>\n  //     );\n  // };\n\n  // export default LandingPage;\n\n  // frontend/src/LandingPage.js\n\n  const fetchContent = async endpoint => {\n    if (!file) return alert('Please upload a file first.');\n    setLoading(true);\n    try {\n      let response;\n      const fileName = encodeURIComponent(file.name);\n      if (endpoint === 'ppt') {\n        response = await axios.get(`http://127.0.0.1:8000/api/generate_${endpoint}/?file=${fileName}`, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('PPT API response:', response.data);\n        if (response.data.message === 'PPT generated successfully.' && response.data.ppt_file) {\n          const pptUrl = `http://127.0.0.1:8000/api/${response.data.ppt_file}`; // Add /api prefix\n          // Fetch the PPT file as a blob to force download\n          const fileResponse = await axios.get(pptUrl, {\n            responseType: 'blob',\n            headers: {\n              'Accept': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n            }\n          });\n          console.log('PPT file response status:', fileResponse.status);\n          const url = window.URL.createObjectURL(new Blob([fileResponse.data]));\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = 'presentation.pptx';\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          window.URL.revokeObjectURL(url);\n          setPptFileUrl(pptUrl); // Update state for UI confirmation\n        } else {\n          throw new Error('PPT generation failed or invalid response');\n        }\n      } else {\n        response = await axios.get(`http://127.0.0.1:8000/api/generate_${endpoint}/?file=${fileName}`, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (endpoint === 'summary') setSummary(response.data.summary || '');else if (endpoint === 'notes') setNotes(response.data.notes || '');\n      }\n    } catch (error) {\n      console.error(`Error fetching ${endpoint}:`, error.response ? error.response.data : error.message);\n      alert(`Failed to fetch ${endpoint}. Check console for details.`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"landing-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      userName: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title\",\n      children: \"AutoReQ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-for-drop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        className: \"dropzone\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"dropzone-text\",\n          children: \"Drag and drop a .txt or .docx file here, or click to select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), file && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"file-name\",\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"submit-button\",\n      disabled: loading,\n      children: loading ? 'Submitting...' : 'Submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), submitStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"submit-status\",\n      children: submitStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchContent('summary'),\n        className: \"action-button\",\n        disabled: loading,\n        children: \"Generate Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchContent('notes'),\n        className: \"action-button\",\n        disabled: loading,\n        children: \"Generate Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchContent('ppt'),\n        className: \"action-button\",\n        disabled: loading,\n        children: \"Generate PPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), (summary || notes || pptFileUrl) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-box\",\n      children: [summary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 82\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 33\n      }, this), notes && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 64\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 78\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 31\n      }, this), pptFileUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"PPT Generated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Download completed. Check your downloads folder.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n};\n_s(LandingPage, \"GbwrfK4FlLLz5veDdgJx8AxWm/8=\", false, function () {\n  return [useDropzone];\n});\n_c = LandingPage;\nexport default LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["React","useState","useDropzone","axios","Header","jsxDEV","_jsxDEV","LandingPage","userName","_s","file","setFile","summary","setSummary","notes","setNotes","pptFileUrl","setPptFileUrl","loading","setLoading","submitStatus","setSubmitStatus","onDrop","acceptedFiles","length","type","alert","getRootProps","getInputProps","accept","fetchContent","endpoint","response","fileName","encodeURIComponent","name","get","headers","console","log","data","message","ppt_file","pptUrl","fileResponse","responseType","status","url","window","URL","createObjectURL","Blob","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","Error","error","className","children","_jsxFileName","lineNumber","columnNumber","onClick","handleSubmit","disabled","_c","$RefreshReg$"],"sources":["C:/Users/smareedu/OneDrive - Hitachi Vantara/Desktop/teams_transcript_ppt_simple/frontend/src/components/LandingPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport Header from './Header';\r\nimport './LandingPage.css';\r\n\r\nconst LandingPage = ({ userName }) => {\r\n    const [file, setFile] = useState(null);\r\n    const [summary, setSummary] = useState('');\r\n    const [notes, setNotes] = useState('');\r\n    const [pptFileUrl, setPptFileUrl] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [submitStatus, setSubmitStatus] = useState('');\r\n\r\n    const onDrop = (acceptedFiles) => {\r\n        if (acceptedFiles.length > 0 && (acceptedFiles[0].type === 'text/plain' || acceptedFiles[0].type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document')) {\r\n            setFile(acceptedFiles[0]);\r\n            setSubmitStatus('');\r\n            setSummary('');\r\n            setNotes('');\r\n            setPptFileUrl('');\r\n        } else {\r\n            alert('Please upload a .txt or .docx file.');\r\n        }\r\n    };\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({ onDrop, accept: { 'text/plain': ['.txt'], 'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx'] } });\r\n\r\n    //     const handleSubmit = async () => {\r\n    //         if (!file) return alert('Please upload a file first.');\r\n    //         setLoading(true);\r\n    //         setSubmitStatus('Submitting...');\r\n    //         const formData = new FormData();\r\n    //         formData.append('file', file);\r\n    //         try {\r\n    //             const response = await axios.post('/api/submit', formData, {\r\n    //                 headers: { 'Content-Type': 'multipart/form-data' },\r\n    //             });\r\n    //             setSubmitStatus('File submitted successfully!');\r\n    //             console.log('File submitted:', response.data);\r\n    //         } catch (error) {\r\n    //             setSubmitStatus('Failed to submit file. Please try again.');\r\n    //             console.error('Submit error:', error);\r\n    //         } finally {\r\n    //             setLoading(false);\r\n    //         }\r\n    //     };\r\n\r\n    //     const fetchContent = async (endpoint) => {\r\n    //         if (!file) return alert('Please upload a file first.');\r\n    //         setLoading(true);\r\n    //         const formData = new FormData();\r\n    //         formData.append('file', file);\r\n    //         try {\r\n    //             const response = await axios.post(`/api/${endpoint}`, formData, {\r\n    //                 headers: { 'Content-Type': 'multipart/form-data' },\r\n    //             });\r\n    //             if (endpoint === 'summary') setSummary(response.data);\r\n    //             else if (endpoint === 'notes') setNotes(response.data);\r\n    //             else if (endpoint === 'ppt') setPptContent(response.data);\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching content:', error);\r\n    //         } finally {\r\n    //             setLoading(false);\r\n    //         }\r\n    //     };\r\n\r\n    //     const downloadPPT = () => {\r\n    //         if (pptContent) {\r\n    //             const blob = new Blob([pptContent], { type: 'application/vnd.openxmlformats-officedocument.presentationml.presentation' });\r\n    //             const url = window.URL.createObjectURL(blob);\r\n    //             const link = document.createElement('a');\r\n    //             link.href = url;\r\n    //             link.download = 'presentation.pptx';\r\n    //             document.body.appendChild(link);\r\n    //             link.click();\r\n    //             document.body.removeChild(link);\r\n    //             window.URL.revokeObjectURL(url);\r\n    //         }\r\n    //     };\r\n\r\n    //     return (\r\n    //         <div className=\"landing-page\">\r\n    //             <Header userName={userName} />\r\n    //             <h2>AutoReQ</h2>\r\n    //             <div className=\"wrapper-for-drop\">\r\n    //                 <div {...getRootProps()} className=\"dropzone\">\r\n    //                     <input {...getInputProps()} />\r\n    //                     <p>Drag and drop a .txt or .docx file here</p>\r\n    //                     {file && <p>{file.name}</p>}\r\n    //                 </div>\r\n    //             </div>\r\n    //             <button onClick={handleSubmit} className=\"submit-button\">\r\n    //                 Submit\r\n    //             </button>\r\n    //             {submitStatus && <p className=\"submit-status\">{submitStatus}</p>}\r\n    //             <div className=\"button-group\">\r\n    //                 <button onClick={() => fetchContent('summary')} disabled={loading}>Generate Summary</button>\r\n    //                 <button onClick={() => fetchContent('notes')} disabled={loading}>Generate Notes</button>\r\n    //                 <button onClick={() => fetchContent('ppt')} disabled={loading}>Generate PPT</button>\r\n    //             </div>\r\n    //             {(summary || notes || pptContent) && (\r\n    //                 <div className=\"content-box\">\r\n    //                     {summary && <p>{summary}</p>}\r\n    //                     {notes && <p>{notes}</p>}\r\n    //                     {pptContent && (\r\n    //                         <>\r\n    //                             <p>Preview: {pptContent}</p>\r\n    //                             <button onClick={downloadPPT}>Download PPT</button>\r\n    //                         </>\r\n    //                     )}\r\n    //                 </div>\r\n    //             )}\r\n    //         </div>\r\n    //     );\r\n    // };\r\n\r\n    // export default LandingPage;\r\n\r\n\r\n    // frontend/src/LandingPage.js\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    \r\n\r\n    const fetchContent = async (endpoint) => {\r\n        if (!file) return alert('Please upload a file first.');\r\n        setLoading(true);\r\n        try {\r\n            let response;\r\n            const fileName = encodeURIComponent(file.name);\r\n            if (endpoint === 'ppt') {\r\n                response = await axios.get(`http://127.0.0.1:8000/api/generate_${endpoint}/?file=${fileName}`, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                });\r\n                console.log('PPT API response:', response.data);\r\n                if (response.data.message === 'PPT generated successfully.' && response.data.ppt_file) {\r\n                    const pptUrl = `http://127.0.0.1:8000/api/${response.data.ppt_file}`; // Add /api prefix\r\n                    // Fetch the PPT file as a blob to force download\r\n                    const fileResponse = await axios.get(pptUrl, {\r\n                        responseType: 'blob',\r\n                        headers: { 'Accept': 'application/vnd.openxmlformats-officedocument.presentationml.presentation' },\r\n                    });\r\n                    console.log('PPT file response status:', fileResponse.status);\r\n                    const url = window.URL.createObjectURL(new Blob([fileResponse.data]));\r\n                    const link = document.createElement('a');\r\n                    link.href = url;\r\n                    link.download = 'presentation.pptx';\r\n                    document.body.appendChild(link);\r\n                    link.click();\r\n                    document.body.removeChild(link);\r\n                    window.URL.revokeObjectURL(url);\r\n                    setPptFileUrl(pptUrl); // Update state for UI confirmation\r\n                } else {\r\n                    throw new Error('PPT generation failed or invalid response');\r\n                }\r\n            } else {\r\n                response = await axios.get(`http://127.0.0.1:8000/api/generate_${endpoint}/?file=${fileName}`, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                });\r\n                if (endpoint === 'summary') setSummary(response.data.summary || '');\r\n                else if (endpoint === 'notes') setNotes(response.data.notes || '');\r\n            }\r\n        } catch (error) {\r\n            console.error(`Error fetching ${endpoint}:`, error.response ? error.response.data : error.message);\r\n            alert(`Failed to fetch ${endpoint}. Check console for details.`);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"landing-page\">\r\n            <Header userName={userName} />\r\n            <h2 className=\"page-title\">AutoReQ</h2>\r\n            <div className=\"wrapper-for-drop\">\r\n                <div {...getRootProps()} className=\"dropzone\">\r\n                    <input {...getInputProps()} />\r\n                    <p className=\"dropzone-text\">Drag and drop a .txt or .docx file here, or click to select</p>\r\n                    {file && <p className=\"file-name\">{file.name}</p>}\r\n                </div>\r\n            </div>\r\n            <button onClick={handleSubmit} className=\"submit-button\" disabled={loading}>\r\n                {loading ? 'Submitting...' : 'Submit'}\r\n            </button>\r\n            {submitStatus && <p className=\"submit-status\">{submitStatus}</p>}\r\n            <div className=\"button-group\">\r\n                <button onClick={() => fetchContent('summary')} className=\"action-button\" disabled={loading}>\r\n                    Generate Summary\r\n                </button>\r\n                <button onClick={() => fetchContent('notes')} className=\"action-button\" disabled={loading}>\r\n                    Generate Notes\r\n                </button>\r\n                <button onClick={() => fetchContent('ppt')} className=\"action-button\" disabled={loading}>\r\n                    Generate PPT\r\n                </button>\r\n            </div>\r\n            {(summary || notes || pptFileUrl) && (\r\n                <div className=\"content-box\">\r\n                    {summary && <div className=\"content-section\"><h3>Summary</h3><p>{summary}</p></div>}\r\n                    {notes && <div className=\"content-section\"><h3>Notes</h3><p>{notes}</p></div>}\r\n                    {pptFileUrl && (\r\n                        <div className=\"content-section\">\r\n                            <h3>PPT Generated</h3>\r\n                            <p>Download completed. Check your downloads folder.</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LandingPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}